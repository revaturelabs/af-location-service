plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.1.1"
	id 'jacoco'
}

group = 'com.revature'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-data-jdbc'
	compile  'org.springframework.boot:spring-boot-starter-data-jpa'
	compile  'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-webflux'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compile group: 'log4j', name: 'log4j', version: '1.2.17'
//	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-all', version: '3.0.2'
	testImplementation group: 'org.junit-pioneer', name: 'junit-pioneer', version: '1.3.8'
	testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-test-support', version: '3.0.2'
	testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-stream-test-support', version: '3.1.2'
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

plugins.withType(JacocoPlugin) {
	tasks["test"].finalizedBy 'jacocoTestReport'
}

sonarqube {
	properties {
		property "sonar.projectKey", "Batch-944-Adam-Ranieri_af-location-service"
		property "sonar.organization", "batch-944-adam-ranieri"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

